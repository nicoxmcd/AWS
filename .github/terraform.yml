name: Terraform
run-name: Run ${{ inputs.script }} to AWS
on:
  workflow_dispatch:
    inputs:
      client:
        description: Which client are you deploying to? Enter 'All' for all
        required: true
        type: string
      script: 
        description: Which resource do you want to build?
        required: false
        type: string
      dry-run:
        description: Dry-run?
        required: true
        type: boolean
        default: true

jobs:
  env: 
    Hello: "${{ secrets.hello }}"
  Prep:
    runs-on: ubuntu-latest
    outputs:
      client: ${{ steps.client-matrix.outputs.new }}
    steps:
      - uses: actions/checkout@v4
      - name: Set Matrix
        id: client-matrix
        run: |
          echo "hello"
          echo "new=world" >> $GITHUB_OUTPUT

  Client:
    needs: Prep
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to AWS
        run: echo "get aws login action lol"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest
          terraform_wrapper: false

      - name: Terraform Init
        id: Init
        run: |
          terraform init

      - name: Terraform Validation
        id: Validate
        run: |
          terraform validate

      - name: Terraform Plan
        id: Plan
        run: |
          export exitcode=0
          terraform plan -detailed-exitcode -out ${{ matrix.env.name }} -tfplan || export exitcode=$?
          echo = "exitcode=$exitcode" >> $GITHUB_OUTPUT
          if [ $exitcode -eq 1]; then
            echo "Terraform Plan Failed"
            exit 1
          else
            else 0
          fi

      - name: Terraform Apply
        id: Apply
        run: |
          terraform apply -auto-approve
        
